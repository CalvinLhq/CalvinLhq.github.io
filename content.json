{"pages":[],"posts":[{"title":"我的第一篇博客","text":"嗨！你好。这是我的第一篇博客。记录了我大一实习期间所学到的技&gt;术知识。本人水准不高，因此所分享的内容不甚专业，也不够深入，但绝对真挚。实习公司业务主要面向云计算虚拟化，所以分享的内容也会专注于 Linux 相关指令、工具、以及基于 Linux 系统的虚拟化技术。 最后，虽然这更偏向于一个个人总结性质的不成熟博客，也希望能多少帮助到正在读这段话的你。（会持续更新） 总览一、在进入公司实习之前，我是一个纯纯的计算机小白。在计算机领域的至高成就除了一次给台式机重装 window 系统的经历，就是大一在学校学的两个多月 C 语言了。 那我要学些什么呢？取决于公司的业务。 公司的业务是什么呢？云计算服务为主。 学云计算要学什么呢？那就多了，不过第一步，我准备学习 Linux 操作系统，因为我被告知服务器上的虚拟机都是运行在 Linux 系统之上的。 于是，画布上的第一笔决定了。 总之先学 Linux 。 - 二、稍微熟悉 Linux 命令行的操作后，作为实践学习，我开始在服务器上实际安装并配置 RedHat 发行版的 Linux 系统。当然此时我仍然是只知其然，不知其所以然的状态。正如欧洲人第一次见到筷子，即使告知其是餐具，也完全没有头绪该如何用两根棍吃饭一样。 Linux 和虚拟化有什么关系呢？ 我先暂时不去考虑这么深奥的东西，以目力所及的困难为优先，首先我要知道： 哪些知识我不得不掌握？网络基础。 在系统安装完成以后，每次必不可少的都要对网络进行配置。但 IP、NetMask、Gateway、DNS、DHCP、交换机、路由器 等等名词使我头晕眼花，给我当头一棒。 于是，我在 Windows 笔记本上开始了针对网络的练习。 通过远程连接学习网络基础 . - 三、Linux 和网络都略有了解后，开始了解虚拟化。 什么是虚拟化？通过软件，将物理硬件资源进行再分配。方便管理。 什么样的软件呢？OpenStack 于是，我开始 学习 OpenStack - 四、逐渐的，通过学习，我开始理解自己在做什么。那么是时候开始加速融入工作环境了。 一个开发团队该如何管理统筹所有的代码呢？每个公司可能有不同的方案，我则被要求学习 Git，一个分布式管理代码的解决方案。 于是，我开始 学习 Git - 五、此时，时间已经过去了一个多月，实习还剩大概相同的时间。至此，更多的需要知识支持的工作被分配给了我。实质性的工作使我信心大增，同时也不能忘了自我提升。 还有什么可学的吗?有啊，多的是。基于 Linux 的开源属性，数不清的工具和插件被开发出来，我也针对实际需求去学习了两个使用的 Linux 工具–Tmux 终端复用工具和 Vim 编辑器，掌握前者可使 Linux 终端操作事半功倍，后者更是 Linux 环境下工作的必不可缺。 于是，我开始学习 Linux 实用工具 Vim 和 Tmux - 六、随着时代的发展，技术的更新迭代与淘汰，OpenStack 虚拟化技术也被发现在个别场景略显笨拙。 什么叫略显笨拙？大部分情况下，一个服务无法将一台虚拟机的资源物尽其用，再加上操作系统本身就会占用很多资源，所以就会有大材小用、头重脚轻的既视感。 解决方案是？这就必须提到 Docker，或者说容器化技术了，一个比虚拟机更轻量化虚拟化解决方案。 于是，我花了几天去 学习 Docker 的使用方式 学习 Linux 基本操作 1. 了解计算机运行机制 - 硬件构造--针对于服务器 - 操作系统--如何将人和硬件联系在一起 2. 了解网络基础中的基础（一知半解程度，可以将工作进行下去） - 可以对服务器的网络配置文件做出编辑 虚拟机与远程连接 虚拟化与 OpenStack Git 和 GitHub Vim 和 Tmux Docker 容器","link":"/2021/07/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"}],"tags":[],"categories":[]}